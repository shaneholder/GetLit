//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LibraryModel", "LibraryTitle", "Library", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GetLit.Web.Data.Library), "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GetLit.Web.Data.Title), true)]

#endregion

namespace GetLit.Web.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LibraryModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LibraryModelContainer object using the connection string found in the 'LibraryModelContainer' section of the application configuration file.
        /// </summary>
        public LibraryModelContainer() : base("name=LibraryModelContainer", "LibraryModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LibraryModelContainer object.
        /// </summary>
        public LibraryModelContainer(string connectionString) : base(connectionString, "LibraryModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LibraryModelContainer object.
        /// </summary>
        public LibraryModelContainer(EntityConnection connection) : base(connection, "LibraryModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Library> Libraries
        {
            get
            {
                if ((_Libraries == null))
                {
                    _Libraries = base.CreateObjectSet<Library>("Libraries");
                }
                return _Libraries;
            }
        }
        private ObjectSet<Library> _Libraries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Libraries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLibraries(Library library)
        {
            base.AddObject("Libraries", library);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryModel", Name="Library")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Library : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Library object.
        /// </summary>
        /// <param name="libraryId">Initial value of the LibraryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Library CreateLibrary(global::System.Int32 libraryId, global::System.String name)
        {
            Library library = new Library();
            library.LibraryId = libraryId;
            library.Name = name;
            return library;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LibraryId
        {
            get
            {
                return _LibraryId;
            }
            set
            {
                if (_LibraryId != value)
                {
                    OnLibraryIdChanging(value);
                    ReportPropertyChanging("LibraryId");
                    _LibraryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LibraryId");
                    OnLibraryIdChanged();
                }
            }
        }
        private global::System.Int32 _LibraryId;
        partial void OnLibraryIdChanging(global::System.Int32 value);
        partial void OnLibraryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryModel", "LibraryTitle", "Title")]
        public EntityCollection<Title> Titles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Title>("LibraryModel.LibraryTitle", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Title>("LibraryModel.LibraryTitle", "Title", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryModel", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Title object.
        /// </summary>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="netflixTitleId">Initial value of the NetflixTitleId property.</param>
        /// <param name="libraryId">Initial value of the LibraryId property.</param>
        public static Title CreateTitle(global::System.Int32 titleId, global::System.String name, global::System.String netflixTitleId, global::System.Int32 libraryId)
        {
            Title title = new Title();
            title.TitleId = titleId;
            title.Name = name;
            title.NetflixTitleId = netflixTitleId;
            title.LibraryId = libraryId;
            return title;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                if (_TitleId != value)
                {
                    OnTitleIdChanging(value);
                    ReportPropertyChanging("TitleId");
                    _TitleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleId");
                    OnTitleIdChanged();
                }
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetflixTitleId
        {
            get
            {
                return _NetflixTitleId;
            }
            set
            {
                OnNetflixTitleIdChanging(value);
                ReportPropertyChanging("NetflixTitleId");
                _NetflixTitleId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NetflixTitleId");
                OnNetflixTitleIdChanged();
            }
        }
        private global::System.String _NetflixTitleId;
        partial void OnNetflixTitleIdChanging(global::System.String value);
        partial void OnNetflixTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LibraryId
        {
            get
            {
                return _LibraryId;
            }
            set
            {
                OnLibraryIdChanging(value);
                ReportPropertyChanging("LibraryId");
                _LibraryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LibraryId");
                OnLibraryIdChanged();
            }
        }
        private global::System.Int32 _LibraryId;
        partial void OnLibraryIdChanging(global::System.Int32 value);
        partial void OnLibraryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryModel", "LibraryTitle", "Library")]
        public Library Library
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("LibraryModel.LibraryTitle", "Library").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("LibraryModel.LibraryTitle", "Library").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Library> LibraryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("LibraryModel.LibraryTitle", "Library");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Library>("LibraryModel.LibraryTitle", "Library", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
